---
export interface Props {
  title: string;
  description: string;
  techStack: string[];
  githubUrl: string;
  imageUrl?: string;
  featured?: boolean;
}

const { title, description, techStack, githubUrl, imageUrl, featured = false } = Astro.props;
---

<div class={`group relative bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden ${featured ? 'ring-2 ring-primary' : ''}`}>
  <!-- Project Image -->
  <div class="aspect-video bg-gradient-to-br from-primary/20 to-purple-600/20 relative overflow-hidden">
    {imageUrl ? (
      <img 
        src={imageUrl} 
        alt={title}
        data-preview
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300 cursor-pointer"
      />
    ) : (
      <div class="w-full h-full flex items-center justify-center">
        <div class="text-6xl font-bold text-primary/50">
          {title.charAt(0)}
        </div>
      </div>
    )}
    
    <!-- Overlay -->
    <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
      <a 
        href={githubUrl} 
        target="_blank" 
        rel="noopener noreferrer"
        class="px-6 py-3 bg-primary text-white rounded-lg font-semibold hover:bg-primary/90 transition-colors transform hover:scale-105"
      >
        <svg class="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
        View on GitHub
      </a>
    </div>
  </div>

  <!-- Project Content -->
  <div class="p-6">
    <div class="flex items-start justify-between mb-3">
      <h3 class="text-xl font-bold text-gray-900 dark:text-white group-hover:text-primary transition-colors">
        {title}
      </h3>
      {featured && (
        <span class="px-2 py-1 bg-accent text-gray-900 text-xs font-semibold rounded-full">
          Featured
        </span>
      )}
    </div>
    
    <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
      {description}
    </p>
    
    <!-- Tech Stack -->
    <div class="mb-4">
      <h4 class="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
        Công nghệ sử dụng
      </h4>
      <div class="flex flex-wrap gap-2">
        {techStack.map(tech => (
          <span class="px-3 py-1 bg-primary/10 text-primary text-sm rounded-full font-medium">
            {tech}
          </span>
        ))}
      </div>
    </div>
    
    <!-- Action Button -->
    <a 
      href={githubUrl} 
      target="_blank" 
      rel="noopener noreferrer"
      class="inline-flex items-center text-primary hover:text-accent font-semibold transition-colors group-hover:translate-x-1 transform duration-200"
    >
      <span>Xem trên GitHub</span>
      <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
      </svg>
    </a>
  </div>

  <!-- Modal xem ảnh lớn -->
  <div id="imgModal" class="hidden fixed inset-0 bg-black/80 flex items-center justify-center z-50">
    <img id="modalImg" class="max-w-3xl rounded-lg shadow-lg" />
  </div>
</div>

<script>
  function openImage(src) {
    const modal = document.getElementById("imgModal");
    const img = document.getElementById("modalImg");
    img.src = src;
    modal.classList.remove("hidden");
    modal.addEventListener("click", () => modal.classList.add("hidden"));
  }

  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll('img[data-preview]').forEach(img => {
      img.addEventListener('click', () => openImage(img.src));
    });
  });
</script>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
